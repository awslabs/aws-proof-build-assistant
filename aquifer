#!/usr/bin/env python
import argparse

NAME = "aquifer"

def build():
    print("build is not yet implemented")

def print_file(file):
    print("print is not yet implemented")

def render():
    print("render is not yet implemented")


def main():
    description = NAME + " tool: helping developers get build information for cource files they want to test."

    parser = argparse.ArgumentParser(description=description)

    parser.add_argument("command", nargs=1, default = "", help="run command for {}. Available command: build, print <SRC_FILE>, render".format(NAME))
    parser.add_argument("argument", nargs="?", default = "", help="<SRC_FILE> argument fo the print command".format(NAME))
    arguments = parser.parse_args()

    valid_commands = ["build", "print", "render"]
    cmd = arguments.command[0]
    arg = arguments.argument

    if not cmd in valid_commands:
        print("Please input a valid command: " + str(valid_commands))

    if cmd == "print" and arg == "" :
        print("Please add the file to print build information for: print <SRC_FILE>. Exiting.")
        return
    
    if cmd != "print" and arg != "" :
        print("Too many arguments. Exiting.")
        return

    if cmd == "build":
        build()

    if cmd == "print":
        print_file(arg)

    if cmd == "render":
        render()




if __name__== "__main__":
    main()